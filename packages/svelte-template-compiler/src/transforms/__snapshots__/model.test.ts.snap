// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Binding <select> value > basic > expected 1`] = `
"import { vModelSelect as _vModelSelect, withDirectives as _withDirectives, delegate as _delegate, renderEffect as _renderEffect, setDynamicProp as _setDynamicProp, template as _template } from 'vue/vapor';
const t0 = _template("<select><option>a</option><option>b</option><option>c</option></select>")

export function render(_ctx) {
  const n3 = t0()
  _withDirectives(n3, [[_vModelSelect, () => selected]])
  const n0 = n3.firstChild
  const n1 = n0.nextSibling
  const n2 = n1.nextSibling
  _delegate(n3, "update:modelValue", () => $event => (selected = $event))
  _renderEffect(() => _setDynamicProp(n0, "value", a))
  _renderEffect(() => _setDynamicProp(n1, "value", b))
  _renderEffect(() => _setDynamicProp(n2, "value", c))
  return n3
}"
`;

exports[`Binding <select> value > basic > received 1`] = `
"import { vModelSelect as _vModelSelect, withDirectives as _withDirectives, next as _next, delegate as _delegate, renderEffect as _renderEffect, setDynamicProp as _setDynamicProp, template as _template } from 'vue/vapor';
const t0 = _template("<select><option>a</option> <option>b</option> <option>c</option></select>")

export function render(_ctx) {
  const n3 = t0()
  _withDirectives(n3, [[_vModelSelect, () => selected]])
  const n0 = n3.firstChild
  const n1 = _next(n0, 2)
  const n2 = _next(n1, 2)
  _delegate(n3, "update:modelValue", () => $event => (selected = $event))
  _renderEffect(() => _setDynamicProp(n0, "value", a))
  _renderEffect(() => _setDynamicProp(n1, "value", b))
  _renderEffect(() => _setDynamicProp(n2, "value", c))
  return n3
}"
`;

exports[`Binding <select> value > multiple > expected 1`] = `
"import { vModelSelect as _vModelSelect, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<select multiple><option value=\\"Rice\\">Rice</option><option value=\\"Beans\\">Beans</option><option value=\\"Cheese\\">Cheese</option><option value=\\"Guac (extra)\\">Guac (extra)</option></select>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelSelect, () => fillings]])
  _delegate(n0, "update:modelValue", () => $event => (fillings = $event))
  return n0
}"
`;

exports[`Binding <select> value > multiple > received 1`] = `
"import { vModelSelect as _vModelSelect, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<select multiple><option value=\\"Rice\\">Rice</option> <option value=\\"Beans\\">Beans</option> <option value=\\"Cheese\\">Cheese</option> <option value=\\"Guac (extra)\\">Guac (extra)</option></select>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelSelect, () => fillings]])
  _delegate(n0, "update:modelValue", () => $event => (fillings = $event))
  return n0
}"
`;

exports[`Binding <select> value > omit value > received 1`] = `
"import { vModelSelect as _vModelSelect, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<select multiple><option>Rice</option> <option>Beans</option> <option>Cheese</option> <option>Guac (extra)</option></select>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelSelect, () => fillings]])
  _delegate(n0, "update:modelValue", () => $event => (fillings = $event))
  return n0
}"
`;

exports[`bind:group > checkbox > expected 1`] = `
"import { vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"checkbox\\" value=\\"Plain\\">")
const t1 = _template("<input type=\\"checkbox\\" value=\\"Whole wheat\\">")
const t2 = _template("<input type=\\"checkbox\\" value=\\"Spinach\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelCheckbox, () => tortilla]])
  const n1 = t1()
  _withDirectives(n1, [[_vModelCheckbox, () => tortilla]])
  const n2 = t2()
  _withDirectives(n2, [[_vModelCheckbox, () => tortilla]])
  _delegate(n0, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n1, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n2, "update:modelValue", () => $event => (tortilla = $event))
  return [n0, n1, n2]
}"
`;

exports[`bind:group > checkbox > received 1`] = `
"import { vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"checkbox\\" value=\\"Plain\\">")
const t1 = _template(" ")
const t2 = _template("<input type=\\"checkbox\\" value=\\"Whole wheat\\">")
const t3 = _template("<input type=\\"checkbox\\" value=\\"Spinach\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelCheckbox, () => tortilla]])
  const n1 = t1()
  const n2 = t2()
  _withDirectives(n2, [[_vModelCheckbox, () => tortilla]])
  const n3 = t1()
  const n4 = t3()
  _withDirectives(n4, [[_vModelCheckbox, () => tortilla]])
  _delegate(n0, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n2, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n4, "update:modelValue", () => $event => (tortilla = $event))
  return [n0, n1, n2, n3, n4]
}"
`;

exports[`bind:group > radio > expected 1`] = `
"import { vModelRadio as _vModelRadio, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"radio\\" value=\\"Plain\\">")
const t1 = _template("<input type=\\"radio\\" value=\\"Whole wheat\\">")
const t2 = _template("<input type=\\"radio\\" value=\\"Spinach\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelRadio, () => tortilla]])
  const n1 = t1()
  _withDirectives(n1, [[_vModelRadio, () => tortilla]])
  const n2 = t2()
  _withDirectives(n2, [[_vModelRadio, () => tortilla]])
  _delegate(n0, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n1, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n2, "update:modelValue", () => $event => (tortilla = $event))
  return [n0, n1, n2]
}"
`;

exports[`bind:group > radio > received 1`] = `
"import { vModelRadio as _vModelRadio, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"radio\\" value=\\"Plain\\">")
const t1 = _template(" ")
const t2 = _template("<input type=\\"radio\\" value=\\"Whole wheat\\">")
const t3 = _template("<input type=\\"radio\\" value=\\"Spinach\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelRadio, () => tortilla]])
  const n1 = t1()
  const n2 = t2()
  _withDirectives(n2, [[_vModelRadio, () => tortilla]])
  const n3 = t1()
  const n4 = t3()
  _withDirectives(n4, [[_vModelRadio, () => tortilla]])
  _delegate(n0, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n2, "update:modelValue", () => $event => (tortilla = $event))
  _delegate(n4, "update:modelValue", () => $event => (tortilla = $event))
  return [n0, n1, n2, n3, n4]
}"
`;

exports[`bind:property > input number > expected 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"number\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => num, void 0, { number: true }]])
  _delegate(n0, "update:modelValue", () => $event => (num = $event))
  return n0
}"
`;

exports[`bind:property > input number > received 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"number\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => num, void 0, { number: true }]])
  _delegate(n0, "update:modelValue", () => $event => (num = $event))
  return n0
}"
`;

exports[`bind:property > input range > expected 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"range\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => num, void 0, { number: true }]])
  _delegate(n0, "update:modelValue", () => $event => (num = $event))
  return n0
}"
`;

exports[`bind:property > input range > received 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"range\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => num, void 0, { number: true }]])
  _delegate(n0, "update:modelValue", () => $event => (num = $event))
  return n0
}"
`;

exports[`bind:property > omit property > received 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => value]])
  _delegate(n0, "update:modelValue", () => $event => (value = $event))
  return n0
}"
`;

exports[`bind:property > simple binding > checkbox > expected 1`] = `
"import { vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"checkbox\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelCheckbox, () => yes]])
  _delegate(n0, "update:modelValue", () => $event => (yes = $event))
  return n0
}"
`;

exports[`bind:property > simple binding > checkbox > received 1`] = `
"import { vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input type=\\"checkbox\\">")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelCheckbox, () => yes]])
  _delegate(n0, "update:modelValue", () => $event => (yes = $event))
  return n0
}"
`;

exports[`bind:property > simple binding > input > expected 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => text]])
  _delegate(n0, "update:modelValue", () => $event => (text = $event))
  return n0
}"
`;

exports[`bind:property > simple binding > input > received 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<input>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => text]])
  _delegate(n0, "update:modelValue", () => $event => (text = $event))
  return n0
}"
`;

exports[`bind:property > simple binding > textarea > expected 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<textarea></textarea>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => text]])
  _delegate(n0, "update:modelValue", () => $event => (text = $event))
  return n0
}"
`;

exports[`bind:property > simple binding > textarea > received 1`] = `
"import { vModelText as _vModelText, withDirectives as _withDirectives, delegate as _delegate, template as _template } from 'vue/vapor';
const t0 = _template("<textarea></textarea>")

export function render(_ctx) {
  const n0 = t0()
  _withDirectives(n0, [[_vModelText, () => text]])
  _delegate(n0, "update:modelValue", () => $event => (text = $event))
  return n0
}"
`;
