// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`#if + :else > expected 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  }, () => {
    const n4 = t1()
    return n4
  })
  return n0
}"
`;

exports[`#if + :else > received 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  }, () => {
    const n4 = t1()
    return n4
  })
  return n0
}"
`;

exports[`#if + :else-if + :else > expected 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")
const t2 = _template("<span>fine</span>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  }, () => _createIf(() => (orNot), () => {
    const n4 = t1()
    return n4
  }, () => {
    const n7 = t2()
    return n7
  }))
  return n0
}"
`;

exports[`#if + :else-if + :else > received 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")
const t2 = _template("<span>fine</span>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  }, () => _createIf(() => (orNot), () => {
    const n4 = t1()
    return n4
  }, () => {
    const n6 = t2()
    return n6
  }))
  return n0
}"
`;

exports[`#if + :else-if > expected 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  }, () => _createIf(() => (orNot), () => {
    const n4 = t1()
    return n4
  }))
  return n0
}"
`;

exports[`#if + :else-if > received 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  }, () => _createIf(() => (orNot), () => {
    const n4 = t1()
    return n4
  }))
  return n0
}"
`;

exports[`basic > expected 1`] = `
"import { renderEffect as _renderEffect, setText as _setText, createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    _renderEffect(() => _setText(n2, msg))
    return n2
  })
  return n0
}"
`;

exports[`basic > received 1`] = `
"import { createTextNode as _createTextNode, insert as _insert, renderEffect as _renderEffect, setText as _setText, createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n3 = t0()
    const n2 = _createTextNode(() => [msg])
    _insert(n2, n3)
    _renderEffect(() => _setText(n3, msg))
    return n3
  })
  return n0
}"
`;

exports[`dedupe same template > expected 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div>hello</div>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  })
  const n3 = _createIf(() => (ok), () => {
    const n5 = t0()
    return n5
  })
  return [n0, n3]
}"
`;

exports[`dedupe same template > received 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div>hello</div>")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = t0()
    return n2
  })
  const n3 = _createIf(() => (ok), () => {
    const n5 = t0()
    return n5
  })
  return [n0, n3]
}"
`;

exports[`nested #if > expected 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<span>nested</span>")
const t1 = _template("<span>nestedElseIf</span>")
const t2 = _template("<span>nestedElse</span>")
const t3 = _template("fine")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = _createIf(() => (nested), () => {
      const n4 = t0()
      return n4
    }, () => _createIf(() => (nestedElse), () => {
      const n6 = t1()
      return n6
    }, () => {
      const n9 = t2()
      return n9
    }))
    return n2
  }, () => {
    const n12 = t3()
    return n12
  })
  return n0
}"
`;

exports[`nested #if > received 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<span>nested</span>")
const t1 = _template("<span>nestedElseIf</span>")
const t2 = _template("<span>nestedElse</span>")
const t3 = _template("fine")

export function render(_ctx) {
  const n0 = _createIf(() => (ok), () => {
    const n2 = _createIf(() => (nested), () => {
      const n4 = t0()
      return n4
    }, () => _createIf(() => (nestedElse), () => {
      const n6 = t1()
      return n6
    }, () => {
      const n8 = t2()
      return n8
    }))
    return n2
  }, () => {
    const n10 = t3()
    return n10
  })
  return n0
}"
`;
